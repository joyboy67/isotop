#!/usr/local/bin/python3
# Fichier: dlvid.py
# Cree le 07 mai 2015 11:13:26
# -*- coding:Utf-8 -*- 


"""

Auteur :      prx (prx@ybad.name)  
licence :     MIT

Description :
    Télécharger simplement des vidéos à l'aide de youtube-dl

"""

import sys
import os
import re

try:
    from tkinter import *
    from tkinter import filedialog
    from tkinter import messagebox
    from tkinter import ttk

except ImportError as err:
    print ("Couldn't load module. {0}".format(err)) 
    sys.exit(1)

class App(object):

    def __init__(self):

        self.root = Tk()
        style = ttk.Style()
        style.theme_use("clam")
        style.configure("green.Horizontal.TProgressbar", foreground='green', background='blue')

        self.root.title("dlvid")

        if os.path.isdir(os.path.join(os.path.expanduser('~'),"Téléchargements")):
            self.dldir = os.path.join(os.path.expanduser('~'),"Téléchargements")
        elif os.path.isdir(os.path.join(os.path.expanduser('~'),"Telechargements")):
            self.dldir = os.path.join(os.path.expanduser('~'),"Telechargements")
        else:
            self.dldir = os.path.expanduser('~')

        # Conteneur principal
        self.root.columnconfigure(0, weight=1)
        self.root.rowconfigure(1, weight=1)

        self.mainframe = ttk.Frame(self.root, padding="3 3 12 12")
        self.mainframe.grid(column=0, row=1, sticky=(N, W, E, S))
        self.mainframe.columnconfigure(0, weight=1)

        # bouton de validation
        self.btnframe = ttk.Frame(self.mainframe)
        self.btnframe.grid(column=0, row=1, sticky=(N))
        self.okbtn = ttk.Button(self.btnframe,\
                text="Télécharger", command=self.dlvid)
        self.okbtn.grid(column=0, row=0)
        
        # lien
        self.framelink = ttk.Labelframe(self.mainframe, text='\
                Lien de la vidéo :',\
                padding="6 6 6 6")
        self.framelink.grid(column=0,row=0, sticky=(N))
        self.root.update_idletasks()
        self.link = Text(self.framelink, height=1)
        try:
            clip = self.root.clipboard_get()
            if clip.startswith("http"):
                self.link.insert("1.0",clip)
        except: pass

        self.link.grid(column=0, row=0,sticky=(W,E))

        # barre de progression
        self.progress = ttk.Frame(self.mainframe)
        self.progress.grid(column=0,row=2,sticky=(N,W,E,S))

        self.pbar = ttk.Progressbar(self.progress, orient=HORIZONTAL, length=200, mode='determinate', style="green.Horizontal.TProgressbar")
        self.pbar["value"] = 0
        self.pbar.pack()
        self.pbar.pack_forget() # hide progress bar
        
        #informations
        self.infolabel = ttk.Label(self.mainframe,\
                text="", \
                padding="2 2 2 2")
        self.infolabel.grid(column=0,row=3,sticky=(N))


        self.chgbtn = ttk.Button(self.mainframe,\
                text="Téléchargement dans {}".format(\
                self.dldir), \
                command=self.chdir)
        self.chgbtn.grid(column=0,row=4, sticky=(N,W,S,E))
 
    def dlvid(self):
        url = self.link.get("1.0", 'end-1c')  
        if url.startswith('http://') or url.startswith('https://'):
            self.pbar.pack()
            ok = False
            print("Downloading {0}".format(url))
            p = os.popen("youtube-dl --no-color -o '{}/%(title)s-%(id)s.%(ext)s' {}".format(self.dldir,url),"r")
            while True:
                line = p.readline()
                if not line: break
                print(line.strip())
                perc = re.findall(r'[0-9]+.[0-9]+%', line)
                eta = re.findall(r'[0-9]+:[0-9]+', line)
                speed = re.findall(r'[0-9]+.[0-9]+.iB/s', line)
                if len(eta) > 0 and len(speed) > 0:
                    eta = eta[0]
                    speed = speed[0]
                    self.infolabel.configure(text="Vitesse : {} - Temps restant : {}".format(\
                        speed, eta))

                if len(perc) > 0:
                    perc = float(perc[0].strip("%"))
                    self.pbar["value"] = perc
                    self.pbar.update()
                    ok = True
                    if perc == 100.0:
                        self.infolabel.configure(text="Téléchargement terminé ☺")

            if not ok:
                self.infolabel.configure(text="Il y a eu un erreur ☹")
            else:
                self.infolabel.configure(text="")

    def play(self):
        print('play video')

    def chdir(self):
        dldir = filedialog.askdirectory(\
            initialdir=(os.path.expanduser("~")),\
            title="Télécharger dans",\
            parent=self.root)
        if dldir != ():
            self.dldir = dldir
            self.chgbtn.configure(text="Téléchargement dans {}".format(\
                            self.dldir))

def main():

    btshare = App()
    btshare.root.mainloop()


    return 0

if __name__ == '__main__':
	main()


# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

